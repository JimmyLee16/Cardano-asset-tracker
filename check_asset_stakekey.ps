## code check 1 láº§n sá»‘ dÆ° toÃ n bá»™ tÃ i sáº£n trong vÃ­.
## code check 1 láº§n toÃ n bá»™ tÃ i sáº£n cÃ³ trong 1 Ä‘á»‹a chá»‰ thÃ¬ Ä‘á»•i URL khÃ¡c
## Thá»±c thi qua power-shell windows
$url1 = 'https://api.koios.rest/api/v1/account_info'
$url2 = 'https://api.koios.rest/api/v1/account_assets'
$headers = @{
    'Accept' = 'application/json'
    'Content-Type' = 'application/json'
}
$payload = @{
    '_stake_addresses' = @("stake1u8uu8qfa25nf50hj8s2m98j8hrwlg00a9gsa807nmvf8wyggp99cz") ## thay vÃ o báº±ng Ä‘á»‹a chá»‰ stake cá»§a báº¡n
}
$data1 = Invoke-RestMethod -Uri $url1 -Method Post -Headers $headers -Body ($payload | ConvertTo-Json)
$data2 = Invoke-RestMethod -Uri $url2 -Method Post -Headers $headers -Body ($payload | ConvertTo-Json)
$adabal = [math]::Round([float]$data1[0].total_balance * 1e-6, 2)
$asset_info = @()
$checked_time1 = Get-Date -Format 'HH:mm dd-MM-yyyy'
foreach ($item in $data2) {
    $assetName = $item.asset_name
    $assetNameASCII = ""
    for ($i = 0; $i -lt $assetName.Length; $i += 2) {
        $assetNameASCII += [System.Convert]::ToChar([System.Convert]::ToUInt32($assetName.Substring($i, 2), 16))
    }
    $quantity = [float]$item.quantity
    $decimal = $item.decimals
    if ($decimal -gt 0) {
        $quantity = $quantity * [math]::Pow(10, -$decimal)
    }
    $asset_info += ,@($assetNameASCII, $quantity)
}
if ($asset_info) {
    $message = "ThÃ´ng tin sáº¿p cáº§n Ä‘Ã¢y nhÃ© ğŸ˜„`n`nSá»‘ dÆ° ADA: $adabal`â‚³`n`nDanh sÃ¡ch Token:`n`n"
    $message += ($asset_info | ForEach-Object { "$($_[0]) - $($_[1]):," }) -join "`n"
    $message += "`n`nChecked time $checked_time1`n`nHÃ£y stake vÃ o VIET pool nhÃ© sáº¿p ğŸ™‡ /pool"
    Write-Output "$message"
} else {
    $message1 = "ThÃ´ng tin sáº¿p cáº§n Ä‘Ã¢y nhÃ© ğŸ˜„`n`nSá»‘ dÆ° ADA: $adabal`â‚³`n`nToken: khÃ´ng cÃ³`n`nChecked time $checked_time1`n`nHÃ£y stake vÃ o VIET pool nhÃ© sáº¿p ğŸ™‡ /pool"
    Write-Output "$message1"
}
